pragma solidity ^0.4.24;
contract sm2{
    event RequessToPasMessage(address ,bytes);
    function transwerMessage(address, bytes);
}
contract eth{
    address contracta;
    function getAddress(address _contracta){
        contracta = _contracta;
    }
    sm2 sm = sm2(contracta);
    function GetFunction(uint _a, uint _b){
        bytes4 method  = bytes4(keccak256("sum(uint256,uint256)"));
        bytes memory data = abi.encodeWithSelector(method, _a, _b);
        sm.transwerMessage(contracta, data);
    }
    
    
    
    
    
    
    
    
    uint a;
    function sum(uint _i,uint _a){
        a=_i+_a;
    }
    function cout()public view returns(uint){
        return a;
    }
}
